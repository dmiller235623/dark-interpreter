	    settings=adc_buffer[4]>>6; // we have 64 settings or so!
	    
	    /*	    	    if (settings>=FINALL){
	      // walk datagen as settings array settings...

		      if (FINALSTEP==0) FINALSTEP=1;
		      if (FINALSPEED==0) FINALSPEED=1;

	    if (++finaldel==FINALSPEED){
	      if (FINALWORMFLAG&1) tmp=FINALSTEP*direction[wormdir];
	      else tmp=FINALSTEP*direction[FINALDIR];
	      finalpos+=tmp;
	      tmp=finalpos%32768;
	      settingsarray[index%BEFORESTACK]=buf16[tmp]>>8; 
	      finaldel=0;
	      index++;
	    }
	    }
	    else {*/
	    /*	    if (oldsettings==settings) settings_trap++;
	    else {
	      settings_trap=0;
	    }
	    oldsettings=settings;
	    
	    if (settings_trap>8){ // trap_threshold was 64REPEATS -- where we could set this!
	      settings_trap=0;
	      //find our setting
	      settingsindex=settings;
	      pushpopflag=0; //seems to work
	    }
	    
	    
	    // now we can set it
	    if (settings_trap>0) 
	      {
		setted=adc_buffer[1]>>5; // 8 bits
		//		setted=0;	    //TESTY!!
		if (setted==0){ // do we do this every time?
		  // do finger thing for all settings/push pop etc.*TODO*
		  // up and down is 8 and 7
		  // left and right is 5 and 6 -for lower board only
		  // for upper makes sense with up/down as 6/8 left/right 5/7 TODO as ifdefs 

		  if (settingsindex<BEFOREDIR){ 
		    // up- as long as [6] > lastupsetting increment value
		    handup=adc_buffer[6]>>8; //4 bits //adc6???
		    if (handup>oldhandup) sstt++;
		    else sstt=0;
		    if (sstt>2){
		      sstt=0;
		      tempsetting++;
		    }
		    oldhandup=handup;

		    // down- as long as [8] > lastdownsetting decrement value
		    handdown=adc_buffer[8]>>8; //4 bits
		    if (handdown>oldhanddown) ttss++;
		    else ttss=0;
		    if (ttss>2){
		      ttss=0;
		      tempsetting--;
		    }

		    oldhanddown=handdown;
		    settingsarray[settingsindex]=tempsetting; //8 bits
		  }
		  else if (settingsindex<BEFORESTACK){ 
		  // directions - find a winner
		    handup=adc_buffer[6]>>7; //4 bits //adc6???
		    handdown=adc_buffer[8]>>7; //4 bits
		    handleft=adc_buffer[5]>>7; //4 bits //adc6???
		    handright=adc_buffer[7]>>7; //4 bits //adc6???

		    if (handup>8) up++; //TODO: TWEAKING but seems okay...
		    if (handdown>8) down++;
		    if (handleft>8) left++;
		    if (handright>8) right++;
		    handcount++;
		    if (up>8 && up>down && up>left && up>right) {
		      settingsarray[settingsindex]=0;
		      up=0;down=0;left=0;right=0;
		    }
		    else if (down>8 && down>left && down>right) {
		      settingsarray[settingsindex]=4;
		      up=0;down=0;left=0;right=0;
		    }
		    else if (left>8 && left>right) {
		      settingsarray[settingsindex]=6;
		      up=0;down=0;left=0;right=0;
		    }
		    else if (right>8) {
		      settingsarray[settingsindex]=2;
		      up=0;down=0;left=0;right=0;
		    }

		    if (handcount>9){
		      handcount=0;up=0;down=0;left=0;right=0;
		    }
		  }
		  else {
		  // push and pop-as below
		    handup=adc_buffer[6]>>8; //4 bits //adc6???
		    if (handup>oldhandup) sstt++;
		    else sstt=0;
		    if (sstt>2){
		      sstt=0;
		      tempsetting++;
		    }
		    oldhandup=handup;

		    // down- as long as [8] > lastdownsetting decrement value
		    handdown=adc_buffer[8]>>8; //4 bits
		    if (handdown>oldhanddown) ttss++;
		    else ttss=0;
		    if (ttss>2){
		      ttss=0;
		      tempsetting--;
		    }

		    oldhanddown=handdown;
		    setted=tempsetting>>1; //8 bits

		    if (pushpopflag==0){
		    pushypop=settingsindex-BEFORESTACK; 
			switch(pushypop){
			case 0:
			  if (setted>64) stack_pos=func_pushn(stackyy,PUSHONE8BIT%NUM_FUNCS,buf16,stack_pos,PUSHTWO8BIT);
			  else stack_pos=func_pop(stackyy,stack_pos);
			  break;
			case 1:
			  if (setted>64) stack_posy=ca_pushn(stackyyy,PUSHONE8BIT%NUM_CA,datagenbuffer,stack_posy,PUSHTWO8BIT);
			  else stack_posy=ca_pop(stackyyy,stack_posy);
			  break;
			case 2:
			  if (setted>64) cpustackpush(m,PUSHONE16BIT,PUSHTWO16BIT,PUSHONE8BIT%31,PUSHTWO8BIT);
			  else stack_posy=ca_pop(stackyyy,stack_posy);
			  break;
			case 3:
			  if (setted>64) cpustackpushhh(datagenbuffer,PUSHONE16BIT,PUSHTWO16BIT,PUSHONE8BIT%31,PUSHTWO8BIT);
			  else cpustackpoppp(datagenbuffer);
			  break;
			case 4:
			default:
			  if (setted>64) exenums=exestackpush(exenums,exestack,EXESTACKPUSH);
			  else exenums=exestackpop(exenums,exestack);
			}
			pushpopflag=1;
		    }



		  }
		} // end of finger
		else // knobbyNOW
	      {
		if (settingsindex<BEFORESTACK){ // DIR is included here 
		  settingsarray[settingsindex]=setted;
		}
		else
		  {
		    // push/pop array
		    // but how to stop repeated pushings/poppings
		    // or push on >128 settin pop on less (saves settings)
			//first 4 is push of each// last is pop
		    if (pushpopflag==0){
		    pushypop=settingsindex-BEFORESTACK; 
			switch(pushypop){
			case 0:
			  if (setted>64) stack_pos=func_pushn(stackyy,PUSHONE8BIT%NUM_FUNCS,buf16,stack_pos,PUSHTWO8BIT,PUSHTHREE8BIT);
			  else stack_pos=func_pop(stackyy,stack_pos);
			  break;
			case 1:
			  if (setted>64) stack_posy=ca_pushn(stackyyy,PUSHONE8BIT%NUM_CA,datagenbuffer,stack_posy,PUSHTWO8BIT,PUSHTHREE8BIT);
			  else stack_posy=ca_pop(stackyyy,stack_posy);
			  break;
			case 2:
			  if (setted>64) cpustackpush(m,PUSHONE16BIT,PUSHTWO16BIT,PUSHONE8BIT%31,PUSHTWO8BIT);
			  else stack_posy=ca_pop(stackyyy,stack_posy);
			  break;
			case 3:
			  if (setted>64) cpustackpushhh(datagenbuffer,PUSHONE16BIT,PUSHTWO16BIT,PUSHONE8BIT%31,PUSHTWO8BIT);
			  else cpustackpoppp(datagenbuffer);
			  break;
			case 4:
			default:
			  if (setted>64) exenums=exestackpush(exenums,exestack,EXESTACKPUSH);
			  else exenums=exestackpop(exenums,exestack);
			}
			pushpopflag=1;
		    }
		  }
	      }
	      }*/
	 /////
